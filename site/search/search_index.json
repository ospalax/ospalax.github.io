{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to My Place # This is my personal site/portfolio - the site is statically generated and hosted on GitHub because why not. (It will also serve as a blog sometime in the future)","title":"Home"},{"location":"#welcome-to-my-place","text":"This is my personal site/portfolio - the site is statically generated and hosted on GitHub because why not. (It will also serve as a blog sometime in the future)","title":"Welcome to My Place"},{"location":"docs/","text":"Knowledge Base # My space to keep and preserve fixes, solutions, howtos and materials which took significant amount of time to make, prepare or discover. Educational Materials # Resources which I created for classroom purposes. KBU (Linux) #","title":"Index"},{"location":"docs/#knowledge-base","text":"My space to keep and preserve fixes, solutions, howtos and materials which took significant amount of time to make, prepare or discover.","title":"Knowledge Base"},{"location":"docs/#educational-materials","text":"Resources which I created for classroom purposes.","title":"Educational Materials"},{"location":"docs/#kbu-linux","text":"","title":"KBU (Linux)"},{"location":"docs/kbu/os/","text":"KBU (Linux) # This section contains draft of supplementary lectures I made for undergraduate students studying Operating Systems class. The target audience are complete novices in OS administration, scripting and Linux/*NIX at large. This course is beginner-friendly with modest goals and expectations. Focus is on pragmatic approach to the topic and providing pointers to navigate the ubiquitous Linux ecosystem. We won't be dwelling in abstract OS theory - for that many big books were written (e.g. Tanenbaum's Modern Operating Systems ). There are many excellent books and resources out there but to complement this course I would recommend the student to tackle the Debian Handbook which is up to date, comprehensive, free and online. Linux distribution of choice for the class was Ubuntu which is based on Debian . Linux OS # OS01: Intro to OS OS02: User Interfaces OS03: Files and Filesystems OS04: More on Shell OS05: Users, Groups and Processes (TODO) OS06: Unix Tools (TODO) OS07: Command Reference (TODO) Shell Scripting # SH01: Shell Interpreter(s) (TODO) SH02: Environment (TODO) SH03: Flow Control (TODO) SH04: Functions and Scope (TODO) SH05: Regular Expressions (TODO)","title":"Index"},{"location":"docs/kbu/os/#kbu-linux","text":"This section contains draft of supplementary lectures I made for undergraduate students studying Operating Systems class. The target audience are complete novices in OS administration, scripting and Linux/*NIX at large. This course is beginner-friendly with modest goals and expectations. Focus is on pragmatic approach to the topic and providing pointers to navigate the ubiquitous Linux ecosystem. We won't be dwelling in abstract OS theory - for that many big books were written (e.g. Tanenbaum's Modern Operating Systems ). There are many excellent books and resources out there but to complement this course I would recommend the student to tackle the Debian Handbook which is up to date, comprehensive, free and online. Linux distribution of choice for the class was Ubuntu which is based on Debian .","title":"KBU (Linux)"},{"location":"docs/kbu/os/#linux-os","text":"OS01: Intro to OS OS02: User Interfaces OS03: Files and Filesystems OS04: More on Shell OS05: Users, Groups and Processes (TODO) OS06: Unix Tools (TODO) OS07: Command Reference (TODO)","title":"Linux OS"},{"location":"docs/kbu/os/#shell-scripting","text":"SH01: Shell Interpreter(s) (TODO) SH02: Environment (TODO) SH03: Flow Control (TODO) SH04: Functions and Scope (TODO) SH05: Regular Expressions (TODO)","title":"Shell Scripting"},{"location":"docs/kbu/os/linux/","text":"Linux OS # Series of slides describing UNIX-like OSes with examples from Linux environment but generic enough to be applicable on other *NIX platforms. This series should be read in order! I have put some thought in the structure of chapters of this series and I made a lot of effort to introduce every new term, topic, tool and mechanism logically in the way which they depend on each other. Every chapter build upon previous one without referencing back and forth. Beware of code snippets! Do *NOT* just copy-paste code from the slides to your terminal... Retype it! Especially since the slides are made with Office suite and single/double quotes might be (often are) replaced with typographic \"curved\" styled quotes... (sorry) # you can copy these character from here # if you cannot find them on your keyboard... - is dash -- is double-dash ` backquote or backtick ' single-quote (vertical, straight, ASCII) \" double-quote (vertical, straight, ASCII) I plan to redo these with Latex - it will be more version-control friendly too... Intro to OS # Birdview of Operating Systems landscape Brief history of Unix and Linux Linux distributions Software packages Basic concepts User Interfaces # GUI, TUI and CLI Linux Desktops Benefits of CLI Exploring Terminal Files and Filesystems # Everything is a file in Unix Type of filesystems Root FS and filesystem tree Disks and partitions Special devices Mountpoints, disk usage Ownership and permissions Fundamental shell tools Basic navigation in CLI More on Shell # Readline and REPL Pagers and history Manpages Environment ( $PATH , $HOME ) Builtins and Executables Aliases Shell profiles ( $PS1 ) Unicode and UTF-8 ( $LANG ) Text editor Note : Bash supports extended globs which can be turned on with shopt builtin. Users, Groups and Processes (TODO) # More on users and groups CLI tools for account management Switching user with su and sudo Setuid and setgid Listing processes Shell jobs and background processes Services and daemons Signals and kill command Nohup command Unix Tools (TODO) # Learning Unix toolbox Commands for file manipulation Using tar and zip utilities grep , sed and awk Piping and redirection Command Reference (TODO) # Summary of all described commands.","title":"Linux OS"},{"location":"docs/kbu/os/linux/#linux-os","text":"Series of slides describing UNIX-like OSes with examples from Linux environment but generic enough to be applicable on other *NIX platforms. This series should be read in order! I have put some thought in the structure of chapters of this series and I made a lot of effort to introduce every new term, topic, tool and mechanism logically in the way which they depend on each other. Every chapter build upon previous one without referencing back and forth. Beware of code snippets! Do *NOT* just copy-paste code from the slides to your terminal... Retype it! Especially since the slides are made with Office suite and single/double quotes might be (often are) replaced with typographic \"curved\" styled quotes... (sorry) # you can copy these character from here # if you cannot find them on your keyboard... - is dash -- is double-dash ` backquote or backtick ' single-quote (vertical, straight, ASCII) \" double-quote (vertical, straight, ASCII) I plan to redo these with Latex - it will be more version-control friendly too...","title":"Linux OS"},{"location":"docs/kbu/os/linux/#intro-to-os","text":"Birdview of Operating Systems landscape Brief history of Unix and Linux Linux distributions Software packages Basic concepts","title":"Intro to OS"},{"location":"docs/kbu/os/linux/#user-interfaces","text":"GUI, TUI and CLI Linux Desktops Benefits of CLI Exploring Terminal","title":"User Interfaces"},{"location":"docs/kbu/os/linux/#files-and-filesystems","text":"Everything is a file in Unix Type of filesystems Root FS and filesystem tree Disks and partitions Special devices Mountpoints, disk usage Ownership and permissions Fundamental shell tools Basic navigation in CLI","title":"Files and Filesystems"},{"location":"docs/kbu/os/linux/#more-on-shell","text":"Readline and REPL Pagers and history Manpages Environment ( $PATH , $HOME ) Builtins and Executables Aliases Shell profiles ( $PS1 ) Unicode and UTF-8 ( $LANG ) Text editor Note : Bash supports extended globs which can be turned on with shopt builtin.","title":"More on Shell"},{"location":"docs/kbu/os/linux/#users-groups-and-processes-todo","text":"More on users and groups CLI tools for account management Switching user with su and sudo Setuid and setgid Listing processes Shell jobs and background processes Services and daemons Signals and kill command Nohup command","title":"Users, Groups and Processes (TODO)"},{"location":"docs/kbu/os/linux/#unix-tools-todo","text":"Learning Unix toolbox Commands for file manipulation Using tar and zip utilities grep , sed and awk Piping and redirection","title":"Unix Tools (TODO)"},{"location":"docs/kbu/os/linux/#command-reference-todo","text":"Summary of all described commands.","title":"Command Reference (TODO)"},{"location":"docs/kbu/os/shell/","text":"Shell Scripting # Series of slides covering *NIX shell environment and POSIX shell language. Shell Interpreter(s) (TODO) # Bourne Shell, BSD shells BASH (Bourne Again Shell) Bashisms vs POSIX checkbashisms script busybox Configuration files Shell history Command aliases Environment (TODO) # Variables and values env / printenv export , unset Variable expansion Whitespace related issues Evil eval Sourcing Subshells Flow Control (TODO) # if / elif / else / fi case / esac for loop while loop return , break , continue , exit Standard input and output Heredoc and redirections Functions and Scope (TODO) # Defining functions Global vs local scope Returning values Simulating argument list Importing foreign functions Signals and trap command Regular Expressions (TODO) # Pattern vs match hello vs h...o hel*o , hel\\+o , hel\\{1,1\\}o ^$ [0-9] , [^0-9] , [[:alnum:]] [abc]\\|[ABC] sed 's/\\(Oh, Hi\\) Mark\\(.*\\)/\\1 Bob\\2/'","title":"Shell Scripting"},{"location":"docs/kbu/os/shell/#shell-scripting","text":"Series of slides covering *NIX shell environment and POSIX shell language.","title":"Shell Scripting"},{"location":"docs/kbu/os/shell/#shell-interpreters-todo","text":"Bourne Shell, BSD shells BASH (Bourne Again Shell) Bashisms vs POSIX checkbashisms script busybox Configuration files Shell history Command aliases","title":"Shell Interpreter(s) (TODO)"},{"location":"docs/kbu/os/shell/#environment-todo","text":"Variables and values env / printenv export , unset Variable expansion Whitespace related issues Evil eval Sourcing Subshells","title":"Environment (TODO)"},{"location":"docs/kbu/os/shell/#flow-control-todo","text":"if / elif / else / fi case / esac for loop while loop return , break , continue , exit Standard input and output Heredoc and redirections","title":"Flow Control (TODO)"},{"location":"docs/kbu/os/shell/#functions-and-scope-todo","text":"Defining functions Global vs local scope Returning values Simulating argument list Importing foreign functions Signals and trap command","title":"Functions and Scope (TODO)"},{"location":"docs/kbu/os/shell/#regular-expressions-todo","text":"Pattern vs match hello vs h...o hel*o , hel\\+o , hel\\{1,1\\}o ^$ [0-9] , [^0-9] , [[:alnum:]] [abc]\\|[ABC] sed 's/\\(Oh, Hi\\) Mark\\(.*\\)/\\1 Bob\\2/'","title":"Regular Expressions (TODO)"},{"location":"me/","text":"About Me # My name is Petr Ospal\u00fd and my handle (usually) is ospalax . I am Czech national born in Brno, Czech Republic . This is me giving lecture on my Kubernetes appliance for OpenNebula at the Barcelona conference: I wrote my first lines of code in the last year of elementary school when we were introduced to Turbo Pascal . At that point I was hooked to computers and I selected a high school with the programming curriculum as a mandatory class. The following is my school project of choice - Sudoku generator and solver written in Pascal: You can check out the lame czenglish code of mine from that period here: https://github.com/ospalax/gympl Later we got introduced into programming in language C , shell scripting and Linux at Brno University and I became Linux user ever since. My first distribution was an Ubuntu and (I believe) Ubuntu 6.06 LTS (Dapper Drake) release. Breaking and fixing my Linux Desktop was a great way to ramp up some practical skills and it definitively helped me to land first job. My professional career started around year 2011 as a Junior Linux Sysadmin .","title":"Index"},{"location":"me/#about-me","text":"My name is Petr Ospal\u00fd and my handle (usually) is ospalax . I am Czech national born in Brno, Czech Republic . This is me giving lecture on my Kubernetes appliance for OpenNebula at the Barcelona conference: I wrote my first lines of code in the last year of elementary school when we were introduced to Turbo Pascal . At that point I was hooked to computers and I selected a high school with the programming curriculum as a mandatory class. The following is my school project of choice - Sudoku generator and solver written in Pascal: You can check out the lame czenglish code of mine from that period here: https://github.com/ospalax/gympl Later we got introduced into programming in language C , shell scripting and Linux at Brno University and I became Linux user ever since. My first distribution was an Ubuntu and (I believe) Ubuntu 6.06 LTS (Dapper Drake) release. Breaking and fixing my Linux Desktop was a great way to ramp up some practical skills and it definitively helped me to land first job. My professional career started around year 2011 as a Junior Linux Sysadmin .","title":"About Me"},{"location":"me/contact/","text":"Contact Me # Email # petr@ospalax.cz GitHub # github.com/ospalax Billing Info # TAX ID : 74584171 Billing Address : Petr Ospal\u00fd Pra\u017e\u00e1kova 1008/69, 639 00, Brno Czech Republic Czech Databox # My datovka : pyy5tjy","title":"Contact"},{"location":"me/contact/#contact-me","text":"","title":"Contact Me"},{"location":"me/contact/#email","text":"petr@ospalax.cz","title":"Email"},{"location":"me/contact/#github","text":"github.com/ospalax","title":"GitHub"},{"location":"me/contact/#billing-info","text":"TAX ID : 74584171 Billing Address : Petr Ospal\u00fd Pra\u017e\u00e1kova 1008/69, 639 00, Brno Czech Republic","title":"Billing Info"},{"location":"me/contact/#czech-databox","text":"My datovka : pyy5tjy","title":"Czech Databox"},{"location":"me/contributions/","text":"My Contributions # vCMTS # I was part of the team developing and deploying the reference implementation of vCMTS . More info about the project: DOCSIS OpenNebula # I joined the project to start so called VM Appliances - OpenNebula had support for cloud images of the popular Linux distros and Windows but no application images. Firstly I developed a generic shell framework with multiple stages shared with each appliance (build, install, bootstrap) and created particular appliances like Wordpress , GitLab , Kubernetes , AWS Greengrass and the most sophisticated Vrouter/VNF appliance which provided loadbalancer , DHCP , DNAT/SNAT and virtual routing. My contributions also added more cloud images and extended the so-called contextualization packages which integrated VMs into OpenNebula (similar to cloud-init ) for both Linux, BSD and Windows OSes. One of the last thing was experimental deployment of full OpenNebula software as containers - I supported both docker and podman and compose deployment. ONAP # I onboarded to a team contributing to ONAP (Open Networking Automation Platform) open-source project. This was my first experience with an opensource development and the work was concentrated around installing and deployment of this big software package.","title":"Contributions"},{"location":"me/contributions/#my-contributions","text":"","title":"My Contributions"},{"location":"me/contributions/#vcmts","text":"I was part of the team developing and deploying the reference implementation of vCMTS . More info about the project: DOCSIS","title":"vCMTS"},{"location":"me/contributions/#opennebula","text":"I joined the project to start so called VM Appliances - OpenNebula had support for cloud images of the popular Linux distros and Windows but no application images. Firstly I developed a generic shell framework with multiple stages shared with each appliance (build, install, bootstrap) and created particular appliances like Wordpress , GitLab , Kubernetes , AWS Greengrass and the most sophisticated Vrouter/VNF appliance which provided loadbalancer , DHCP , DNAT/SNAT and virtual routing. My contributions also added more cloud images and extended the so-called contextualization packages which integrated VMs into OpenNebula (similar to cloud-init ) for both Linux, BSD and Windows OSes. One of the last thing was experimental deployment of full OpenNebula software as containers - I supported both docker and podman and compose deployment.","title":"OpenNebula"},{"location":"me/contributions/#onap","text":"I onboarded to a team contributing to ONAP (Open Networking Automation Platform) open-source project. This was my first experience with an opensource development and the work was concentrated around installing and deployment of this big software package.","title":"ONAP"},{"location":"me/experience/","text":"Work Experience # 2021-2025: DevOps Tieto / Tietoevry Working on Intel's vCMTS reference dataplane , enabling the deployment on various setups including Kubernetes and Openshift 2019-2022: Cloud Engineer OpenNebula Systems Contributor to the opensource project OpenNebula , creating VM appliances, improving build and infrastructure, developing contextualization to deploy and integrate VMs, creation of Vrouter and VNF network appliance, Kubernetes multi-node appliance and much more 2018-2019: DevOps/SW Developer Tieto Contributions to the ONAP (Open Networking Automation Platform) open-source project 2016-2018: Senior System Engineer Smart Comp Linux system administration, DevOps, scripting, automation, docker containerization 2011-2016: System Administrator Eurosat CS / Eurosat Holding Linux and Windows system administration, user support, virtualization, scripting, automation, PC and server assembly and deployment and everything between","title":"Experience"},{"location":"me/experience/#work-experience","text":"2021-2025: DevOps Tieto / Tietoevry Working on Intel's vCMTS reference dataplane , enabling the deployment on various setups including Kubernetes and Openshift 2019-2022: Cloud Engineer OpenNebula Systems Contributor to the opensource project OpenNebula , creating VM appliances, improving build and infrastructure, developing contextualization to deploy and integrate VMs, creation of Vrouter and VNF network appliance, Kubernetes multi-node appliance and much more 2018-2019: DevOps/SW Developer Tieto Contributions to the ONAP (Open Networking Automation Platform) open-source project 2016-2018: Senior System Engineer Smart Comp Linux system administration, DevOps, scripting, automation, docker containerization 2011-2016: System Administrator Eurosat CS / Eurosat Holding Linux and Windows system administration, user support, virtualization, scripting, automation, PC and server assembly and deployment and everything between","title":"Work Experience"},{"location":"posts/template/","text":"Hello world! # This is example. The rest of the post.","title":"Hello world!"},{"location":"posts/template/#hello-world","text":"This is example. The rest of the post.","title":"Hello world!"},{"location":"posts/2025/25_03_15_first/","text":"First Post # Started to use mkdocs to save nuggets of wisdom and snippets which I have to regularly re-discover or which were so hard to work out that I want to have it somewhere tucked away for safe-keeping. Hopefully I will not forget to extend this knowledge base...","title":"First Post"},{"location":"posts/2025/25_03_15_first/#first-post","text":"Started to use mkdocs to save nuggets of wisdom and snippets which I have to regularly re-discover or which were so hard to work out that I want to have it somewhere tucked away for safe-keeping. Hopefully I will not forget to extend this knowledge base...","title":"First Post"}]}